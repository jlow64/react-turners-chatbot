{"version":3,"sources":["api/tokenGen.js","components/ChatBot.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","ChatBot","token","id","title","src","style","App","state","chatClicked","onStart","a","Token","get","response","setState","data","onClickOpen","onClickClose","this","display","position","bottom","right","class","background","width","height","color","cursor","onClick","borderRadius","paddingTop","fontSize","React","Component","ReactDOM","render","document","querySelector"],"mappings":"iPAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,mCACTC,QAAS,CACPC,cACE,0E,OCcSC,EAlBC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAOf,OACI,qBAAKC,GAAG,UAAR,SACI,wBACIC,MAAM,4BACND,GAAG,OAAOE,IAPA,KAAVH,EAAgB,GAHlB,8DAG6BA,EAQ3BI,MAAO,CAAC,SAAY,QAAS,MAAS,OAAQ,UAAa,cCmE5DC,E,4MA5EbC,MAAQ,CAAEN,MAAO,GAAIO,aAAa,G,EAMlCC,Q,sBAAU,4BAAAC,EAAA,sEACeC,EAAMC,IAAI,cAAe,IADxC,OACFC,EADE,OAER,EAAKC,SAAS,CACZb,MAAOY,EAASE,OAHV,2C,EAOVC,YAAc,WACZ,EAAKF,SAAS,CAAEN,aAAa,K,EAG/BS,aAAe,WACb,EAAKH,SAAS,CAAEN,aAAa,K,uDAhB/B,WACEU,KAAKT,Y,oBAkBP,WAuCE,OACE,sBAAKP,GAAG,oBAAoBG,MAvCP,CACrBc,QAAS,OACT,iBAAkB,SAClB,iBAAkB,SAClBC,SAAU,WACVC,OAAQ,MACRC,MAAO,OAiCP,UACE,qBAAKpB,GAAG,gBAAgBG,MA/BT,CACjB,iBAAkB,OA8BhB,SACGa,KAAKX,MAAMC,YAAa,mBAAGe,MAAM,aAAalB,MA5B9B,CACrBmB,WAAY,UACZC,MAAO,OACPC,OAAQ,OACR,gBAAiB,MACjB,cAAe,MACfC,MAAO,QACPC,OAAQ,UACR,YAAa,QAoB6DC,QAASX,KAAKD,eAAoB,OAE1G,8BACGC,KAAKX,MAAMC,YAAa,cAAC,EAAD,CAASP,MAAOiB,KAAKX,MAAMN,QAAW,OAEjE,qBAAKC,GAAG,iBAAR,SACIgB,KAAKX,MAAMC,YAAa,KAAO,mBAAGe,MAAM,wBAAwBlB,MAvBrD,CACjBe,SAAU,WACVC,OAAQ,OACRC,MAAO,OACPE,WAAY,UACZC,MAAO,OACPC,OAAQ,OACRI,aAAc,MACdC,WAAY,OACZJ,MAAO,QACPC,OAAQ,UACRI,SAAU,QAY+EH,QAASX,KAAKF,uB,GAtE3FiB,IAAMC,WCAxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.a0ae04ce.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://webchat.botframework.com',\r\n  headers: {\r\n    Authorization:\r\n      'BotConnector 0mnFPMfAqig.GdxGmu4rPqN9lz9qAlY2Oerz5sD7CpSq8zNGc1EWhWA',\r\n  },\r\n});\r\n","import React from 'react';\r\n\r\nconst ChatBot = ({ token }) => {\r\n    var src = 'https://webchat.botframework.com/embed/TurnersCarsFAQBot?t=';\r\n    \r\n    const getsrc = () => {\r\n        return (token === '') ? '' : src + token;\r\n    }; \r\n\r\n    return (\r\n        <div id=\"chatbot\">\r\n            <iframe \r\n                title='Turners Cars FAQ Chat Bot' \r\n                id='chat' src={getsrc()} \r\n                style={{'maxWidth': '300px', 'width': '100%', 'minHeight': '400px'}} >\r\n            </iframe>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatBot;","import React from 'react';\r\nimport Token from '../api/tokenGen';\r\nimport ChatBot from './ChatBot';\r\n\r\nclass App extends React.Component {\r\n  state = { token: '', chatClicked: false };\r\n\r\n  componentDidMount() {\r\n    this.onStart();\r\n  }\r\n\r\n  onStart = async () => {\r\n    const response = await Token.get('/api/tokens', {});\r\n    this.setState({\r\n      token: response.data\r\n    });\r\n  };\r\n\r\n  onClickOpen = () => {\r\n    this.setState({ chatClicked: true });\r\n  }\r\n\r\n  onClickClose = () => {\r\n    this.setState({ chatClicked: false });\r\n  }\r\n\r\n  render() {\r\n    const containerStyle = {\r\n      display: 'flex',\r\n      'flex-direction': 'column',\r\n      'vertical-align': 'middle',\r\n      position: 'absolute',\r\n      bottom: '0px',\r\n      right: '0px',\r\n     };\r\n    \r\n    const closeStyle = {\r\n      'padding-bottom': '5px',\r\n    };\r\n\r\n    const closeIconStyle = {\r\n      background: '#da5050',\r\n      width: '30px',\r\n      height: '30px',\r\n      'border-radius': '50%',\r\n      'padding-top': '6px',\r\n      color: 'white',\r\n      cursor: 'pointer',\r\n      'font-size': '20px',\r\n    };\r\n\r\n    const popupStyle = {\r\n      position: 'absolute',\r\n      bottom: '10px',\r\n      right: '10px',\r\n      background: '#2e90d1',\r\n      width: '60px',\r\n      height: '60px',\r\n      borderRadius: '50%',\r\n      paddingTop: '20px',\r\n      color: 'white',\r\n      cursor: 'pointer',\r\n      fontSize: '40px',\r\n    };\r\n\r\n    return (\r\n      <div id=\"chatbot-container\" style={containerStyle}>\r\n        <div id=\"chatbot-close\" style={closeStyle}>\r\n          {this.state.chatClicked? <i class=\"close icon\" style={closeIconStyle} onClick={this.onClickClose}></i>: null}\r\n        </div>\r\n        <div>\r\n          {this.state.chatClicked? <ChatBot token={this.state.token} />: null}\r\n        </div>\r\n        <div id=\"chatbot-button\">\r\n          { this.state.chatClicked? null : <i class=\"comments outline icon\" style={popupStyle} onClick={this.onClickOpen} ></i>  }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}